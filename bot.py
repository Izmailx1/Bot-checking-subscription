from telebot import TeleBot
from telebot import types
from telebot.apihelper import ApiTelegramException
import pickle

token = '6150482050:AAH5w6fO_lxK7_9laJHja5rWAbFznxoI-e4'
bot = TeleBot(token)
chats = {}
admins = []
superadmins = [409555770]

with open('chats.pkl', 'rb') as f:
    chats = pickle.load(f)


@bot.message_handler(commands=['start'])
def start_message(message):
    if message.chat.type == 'private':
        if message.chat.id in superadmins:
            admins.append(message.chat.id)
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞', callback_data='mail_to_owners'))
            keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º', callback_data='mail_to_chats'))

            bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ªü§ñ\n'
                                              '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏ –Ω–∞–¥–µ–ª–∏—Ç–µ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∞–º–∏\n'
                                              '–ê –ø–æ—Å–ª–µ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É \n/startbot @"–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞" —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª'
                                              ' –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞\n'
                                              '–ò–ª–∏ –∫–æ–º–∞–Ω–¥—É /stopbot –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è', reply_markup=keyboard)
        else:
            admins.append(message.chat.id)
            bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ªü§ñ\n'
                                              '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏ –Ω–∞–¥–µ–ª–∏—Ç–µ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∞–º–∏\n'
                                              '–ê –ø–æ—Å–ª–µ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É \n/startbot @"–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞" —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª'
                                              ' –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞\n'
                                              '–ò–ª–∏ –∫–æ–º–∞–Ω–¥—É /stopbot –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è')


def go_menu(message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞', callback_data='mail_to_owners'))
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º', callback_data='mail_to_chats'))
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ ‚¨á',
                     reply_markup=keyboard)


@bot.message_handler(commands=['startbot'])
def start_bot(message):
    global chats
    member = bot.get_chat_member(message.chat.id, message.from_user.id)
    if member.status == 'creator' or member.status == 'administrator':
        chats[message.chat.id] = [message.text[10:], message.from_user.id]
        bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤–∫–ª—é—á–µ–Ω–∞!')
        with open('chats.pkl', 'wb') as f:
            pickle.dump(chats, f)


@bot.message_handler(commands=['stopbot'])
def stop_bot(message):
    global chats
    if chats[message.chat.id][1] == message.from_user.id:
        del chats[message.chat.id]
        with open('chats.pkl', 'wb') as f:
            pickle.dump(chats, f)
        bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω–∞!')


@bot.message_handler(content_types=['text'])
def check_access(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(f'–û—Ç–º–µ–Ω–∞'))
    try:
        if message.from_user.id != chats[message.chat.id][1] or message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É':
            if not is_subscribed(message):
                bot.delete_message(message.chat.id, message.message_id)
                keyboard = types.InlineKeyboardMarkup()
                keyboard.add(types.InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
                                                        url=f"https://t.me/{chats[message.chat.id][0][1:]}",
                                                        callback_data='sub_channel_done'))
                print(message.from_user.first_name)
                print(message.from_user.id)
                print(chats[message.chat.id][0])
                bot.send_message(message.chat.id,
                                 f'<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a>\n–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {chats[message.chat.id][0]}'
                                 , reply_markup=keyboard, parse_mode='HTML')

        elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞' and message.chat.id in superadmins:
            bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=keyboard)

        elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º' and message.chat.id in superadmins:
            bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=keyboard)

    except Exception as e:
        print(e)


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == 'sub_channel_done':
        bot.delete_message(call.message.chat.id, call.message.message_id)

    elif call.data == 'mail_to_chats':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞—á–Ω–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞'
                                               ' —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ –≤—Å–µ–º —á–∞—Ç–∞–º, –≥–¥–µ –µ—Å—Ç—å –±–æ—Ç', reply_markup=keyboard)
        bot.register_next_step_handler(call.message, mail_chats)

    elif call.data == 'mail_to_owners':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞—á–Ω–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞'
                                               ' —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ –≤—Å–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞', reply_markup=keyboard)
        bot.register_next_step_handler(call.message, mail_owners)

    elif call.data == 'menu':
        bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)
        go_menu(call.message)


def is_subscribed(message):
    channel_id = chats[message.chat.id][0]
    user_id = message.from_user.id
    try:
        user_info = bot.get_chat_member(channel_id, user_id)
        if user_info.status == 'left' or user_info.status == 'kicked':
            return False
        return True
    except ApiTelegramException as e:
        if e.result_json['description'] == 'Bad Request: user not found':
            return False


def mail_owners(message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞', callback_data='mail_to_owners'))
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º', callback_data='mail_to_chats'))
    for owner in admins:
        print(owner)
        try:
            bot.send_message(owner, message.text)
        except:
            pass
    bot.send_message(message.chat.id, '–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n'
                                      '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏ –Ω–∞–¥–µ–ª–∏—Ç–µ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∞–º–∏\n'
                                      '–ê –ø–æ—Å–ª–µ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É \n/startbot @"–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞" —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª'
                                      ' –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞\n'
                                      '–ò–ª–∏ –∫–æ–º–∞–Ω–¥—É /stopbot –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è'
                     , reply_markup=keyboard)


def mail_chats(message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞', callback_data='mail_to_owners'))
    keyboard.add(types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º', callback_data='mail_to_chats'))
    for chat_id in chats:
        try:
            print(chat_id)
            bot.send_message(chat_id, message.text)
        except:
            pass
    bot.send_message(message.chat.id, '–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n'
                                      '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏ –Ω–∞–¥–µ–ª–∏—Ç–µ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∞–º–∏\n'
                                      '–ê –ø–æ—Å–ª–µ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É \n/startbot @"–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞" —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª'
                                      ' –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞\n'
                                      '–ò–ª–∏ –∫–æ–º–∞–Ω–¥—É /stopbot –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è'
                     , reply_markup=keyboard)


bot.polling()
